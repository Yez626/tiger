# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: ci

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.output.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
            go-version: '^1.17.7'
      - name: Build runner
        run: cd runner && go build main.go
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        uses: docker/metadata-action@v3
        id: meta
        with:
          images: ghcr.io/joint-online-judge/tiger
          flavor: |
            latest=${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      - name: Set output
        id: output
        run: |
          TAGS="${{ steps.meta.outputs.tags }}"
          echo "$TAGS"
          TAG="${TAGS%%$'\n'*}"
          echo "$TAG"
          echo "::set-output name=tag::$TAG"
      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build and push Docker image with PyTest
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
        id: docker_build_pytest
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            PYTEST=1
          tags: ghcr.io/joint-online-judge/tiger:test
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  test:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Pull docker image
        run: |
          echo ${{ needs.build.outputs.tag }}
          docker pull ${{ needs.build.outputs.tag }}
      - name: Run PyTest
        run: |
          docker run --name tiger ${{ needs.build.outputs.tag }} /bin/bash -c "poetry install --no-dev -E test; pytest -svv"
          docker rm tiger
      - name: Run Runner Test
        run: |
          docker run --name tiger ${{ needs.build.outputs.tag }} /bin/bash -c "/root/runner ls"
          docker rm tiger
